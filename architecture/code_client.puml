@startuml
!include<C4/C4_Component>
!include<office/Users/user.puml>

LAYOUT_WITH_LEGEND()
' left to right direction

title Code Diagram for Client App

System_Ext(user, "Python Script")
System_Ext(cli, "Command Line")

Container_Boundary(py-mms, "py-mms") {

    Component(PyMMS, "PyMMS", "Python class", "Python MMS Package")
    Component(GoMMS, "GoMMS", "Python class", "Go library wrapper using Python ctypes")
    Component(Config, "Config", "Python class", "PyMMS persistent config")

    Rel(PyMMS, GoMMS, "Internal")
    Rel(Config, PyMMS, "Internal")

}

Container_Boundary(go-mms, "go-mms") {

    Container_Boundary(go-mms-cmd, "cmd") {
        Component(cmdmms, "cmd/mms", "Go", "Command line interface")
        Component(cmdmmsd, "cmd/mmsd", "Go", "MMS daemon")
    }
    Container_Boundary(go-mms-pkg, "pkg") {
        Component(pkgmms, "pkg/mms", "Go", "Met Messaging System")
        Component(pkgmeta, "pkg/metaservice", "Go", "")
        Component(pkgmiddle, "pkg/middleware", "Go", "")
    }
    Container_Boundary(go-mms-internal, "internal") {
        Component(intapi, "api", "Go", "")
    }
    Container_Boundary(go-mms-export, "export") {
        Component(libmms, "libmms.so", "Go", "MMS shared object")
    }

    Rel(cmdmms, pkgmms, "CLI to MMS")

    Rel(cmdmmsd, intapi, "")

    Rel(libmms, pkgmms, "Lib to MMS")

    Rel(pkgmeta, pkgmms, "")

    Rel(intapi, pkgmms, "")
    Rel(intapi, pkgmeta, "")
    Rel(intapi, pkgmiddle, "")
}

Rel(user, PyMMS, "import pymms")
Rel(cli, cmdmms, "")
Rel(GoMMS, libmms, "Python-Go interface", "JSON")

@enduml
